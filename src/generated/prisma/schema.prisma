// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sapling {
  id           Int        @id @default(autoincrement())
  name         String
  description  String
  category     String
  categoryId   Int?
  categoryRel  Category?  @relation(fields: [categoryId], references: [id])
  image        String
  season       String[]
  availability Boolean
  price        Float
  rating       Float
  reviews      Int
  createdAt    DateTime   @default(now())
  cartItems    CartItem[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("customer") // "customer" or "admin"
  createdAt DateTime @default(now())
  cart      Cart?
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  saplingId Int
  sapling   Sapling  @relation(fields: [saplingId], references: [id])
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, saplingId])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  saplings Sapling[]
}
